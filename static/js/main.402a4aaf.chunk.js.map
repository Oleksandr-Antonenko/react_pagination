{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","components/Items/Items.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","lastPage","Math","ceil","pages","className","classNames","disabled","href","onClick","map","page","active","Items","items","item","App","useState","visibleItems","setVisibleItems","useSearchParams","searchParams","setSearchParams","Number","get","length","startItemIndex","lastItemIndex","min","useEffect","slice","id","value","onChange","target","count","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"iMAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAAQd,EAAW,EAAGW,GAK5B,OACE,qBAAII,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBR,IAHhB,SAME,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAfe,kBAAMT,EAAaD,EAAc,IAUlD,oBAWDK,EAAMM,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQb,IAAgBY,IAH9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAK,QACLC,QAAS,WACPT,EAAaW,IALjB,SAQGA,KAVEA,MAeT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUR,IAAgBE,IAHhC,SAME,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QAtDe,kBAAMT,EAAaD,EAAc,IAiDlD,wBChEKc,EAAyB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACpC,6BACGA,EAAMJ,KAAI,SAAAK,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SCFxBD,EAAQxB,EAAW,EAAG,IACzBoB,KAAI,SAAAhB,GAAC,qBAAYA,MAKPsB,EAAgB,WAC3B,MAAwCC,mBAAmB,IAA3D,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCC,YAAgB,CACtDT,KANiB,IAOjBb,QANqB,MAIvB,mBAAOuB,EAAP,KAAqBC,EAArB,KAKMvB,EAAcwB,OAAOF,EAAaG,IAAI,SACtC1B,EAAUyB,OAAOF,EAAaG,IAAI,YAClC3B,EAAQiB,EAAMW,OAEdC,GAAkB3B,EAAc,GAAKD,EACrC6B,EAAgBzB,KAAK0B,IAAI7B,EAAcD,EAASD,GAEtDgC,qBAAU,WACR,OAAOV,EAAgBL,EAAMgB,MAAMJ,EAAgBC,MAClD,CAAC7B,EAASC,IAkBb,OACE,sBAAKM,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiC2B,EAAiB,EADlD,cACyDC,EADzD,eAC6E9B,EAD7E,OAIA,sBAAKQ,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,MAAOlC,EACPmC,SAxBkB,SAAC,GAEvB,IADQD,EACT,EADDE,OAAUF,MAEZV,EAAgB,CACdX,KAAM,IACNb,QAASkC,KAcL,SAOG,CAAC,EAAG,EAAG,GAAI,IAAItB,KAAI,SAAAyB,GAAK,OACvB,wBAAoBH,MAAOG,EAA3B,SAAmCA,GAAtBA,UAKnB,uBAAOC,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAhDe,SAACW,GACpBW,EAAgB,CACdX,KAAK,GAAD,OAAKA,GACTb,QAAQ,GAAD,OAAKA,QAgDZ,cAAC,EAAD,CAAOgB,MAAOI,QC9EpBmB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.402a4aaf.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\n\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const pages = getNumbers(1, lastPage);\n\n  const handleNextPage = () => onPageChange(currentPage + 1);\n  const handlePrevPage = () => onPageChange(currentPage - 1);\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={classNames(\n            'page-item',\n            { active: currentPage === page },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href=\"#page\"\n            onClick={() => {\n              onPageChange(page);\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === lastPage },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === lastPage}\n          onClick={handleNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  items: string[];\n};\n\nexport const Items: React.FC<Props> = ({ items }) => (\n  <ul>\n    {items.map(item => (\n      <li data-cy=\"item\" key={item}>{item}</li>\n    ))}\n  </ul>\n);\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport { Items } from './components/Items';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst DEFAULT_PAGE = '1';\nconst DEFAULT_PER_PAGE = '5';\n\nexport const App: React.FC = () => {\n  const [visibleItems, setVisibleItems] = useState<string[]>([]);\n  const [searchParams, setSearchParams] = useSearchParams({\n    page: DEFAULT_PAGE,\n    perPage: DEFAULT_PER_PAGE,\n  });\n\n  const currentPage = Number(searchParams.get('page'));\n  const perPage = Number(searchParams.get('perPage'));\n  const total = items.length;\n\n  const startItemIndex = (currentPage - 1) * perPage;\n  const lastItemIndex = Math.min(currentPage * perPage, total);\n\n  useEffect(() => {\n    return setVisibleItems(items.slice(startItemIndex, lastItemIndex));\n  }, [perPage, currentPage]);\n\n  const onPageChange = (page: number) => {\n    setSearchParams({\n      page: `${page}`,\n      perPage: `${perPage}`,\n    });\n  };\n\n  const handlePerPageChange = (\n    { target: { value } }: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setSearchParams({\n      page: '1',\n      perPage: value,\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItemIndex + 1} - ${lastItemIndex} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            {[3, 5, 10, 20].map(count => (\n              <option key={count} value={count}>{count}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <Items items={visibleItems} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}